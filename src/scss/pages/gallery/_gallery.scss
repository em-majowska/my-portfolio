@use '../../abstracts' as u;

/* Gallery Grid Layout */

.gallery {
  position: relative;
  padding-block: var(--padding-outline);
  margin-block-end: 5em;

  --grid-min-col-size: 300px;
  --grid-gap: 40px;

  display: grid;
  justify-items: center;
  justify-content: center;

  gap: var(--grid-gap);

  grid-template-columns: repeat(
    auto-fit,
    minmax(var(--grid-min-col-size), 330px)
  );
  grid-auto-rows: minmax(300px, max-content);

  button.btn {
    font-family: var(--main-font);
  }
}

.gallery > article {
  display: grid;
  grid-template-rows: 1fr 4rem;
  grid-template-rows: 1fr auto;
  position: relative;
  width: 100%;
  // max-width: 330px;
  border: var(--border);
  border-radius: var(--border-radius);
  background-color: var(--text);
  overflow: hidden;

  &:focus-visible {
    outline-offset: 3px;
  }

  /* Hover-me! Tag */
  &[data-animated='true'],
  &.interact {
    &::after {
      position: absolute;
      content: 'Hover me!';
      top: 0px;
      right: 1em;
      width: 55px;
      width: 3.125rem;
      height: 70px;
      height: 4rem;

      padding-block-start: 1.5em;
      border-bottom-left-radius: 50% 30%;
      border-bottom-right-radius: 50% 30%;

      border: 1px solid var(--text);
      font-size: 1rem;
      font-weight: 900;
      text-align: center;
      line-height: 1.1;

      background: var(--background);
      animation: tagBounce 2s infinite;
      z-index: 5;
      transition: top 1s ease-in-out;
    }
  }

  /* Click-me! Tag */
  &.interact {
    &::after {
      content: 'Click me!';
    }
  }

  &:is(:hover, .animate, :focus-visible, :focus-within) {
    &::after {
      animation-play-state: paused;
      top: -4rem;
    }
  }

  /* Reset Animation Button */
  .btn--reset {
    position: absolute;
    bottom: -100%;
    height: auto;
    padding: 0.5em 1.75em;
    border: 2px solid var(--background);
    border-radius: var(--border-radius) var(--border-radius) 0 0;
    font-size: 1.5rem;
    font-weight: 900;
    line-height: 1.1;
    text-align: center;
    color: var(--background);
    background-color: var(--text);
    box-shadow: none;
    transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out,
      bottom 0.5s ease-in-out;

    z-index: 5;

    &.active {
      bottom: -0.125rem;
      visibility: visible;
    }
  }

  .btn--reset:is(:hover, :focus-visible) {
    color: var(--text);
    background-color: var(--background);
    outline-color: var(--background);
  }
}

.card {
  & > * {
    width: inherit;
    max-width: inherit;
  }

  &:focus-visible {
    scroll-margin-top: 30vh;
    scroll-margin-bottom: 30vh;
  }

  &.show {
    opacity: 0;
    animation: showCard 0.5s ease-in-out 0.5s forwards;
  }

  &__top {
    @include u.center;
    align-items: center;
    position: relative;
    overflow: hidden;
    min-height: 250px;

    a,
    p,
    li,
    button.btn {
      font-size: 16px;
    }

    .overlay {
      position: absolute;
      inset: 0;
      opacity: 0;
      background-color: hsl(0, 0%, 0%, 0.6);
      transition: opacity 0.5s ease-in-out;

      &.active {
        opacity: 1;
      }
    }
  }

  &__bar {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    align-content: center;
    justify-content: space-between;
    column-gap: 1em;
    // gap: 1em;
    width: 100%;
    padding: 1em;
    color: var(--background);
    background-color: var(--text);

    &__header {
      font-size: 2rem;
      text-wrap: nowrap;
      span {
        color: var(--secondary);
      }
    }

    &__title {
      max-width: 13ch;
      overflow-wrap: normal;
      align-self: end;
      font-size: 1.125rem;
      font-family: var(--mono-font);
      line-height: 1.2;
      text-align: right;
      text-transform: uppercase;
      hyphens: none;
    }
  }
}

/* CSS Content inside Gallery Cards*/
.frame {
  position: relative;
  overflow: hidden;

  &--shadow {
    box-shadow: 4px 8px 16px 5px rgba(0, 0, 0, 0.1);
    border-radius: 3px;
  }
}

.center {
  @include u.center;
}

/* Animations */

@keyframes showCard {
  from {
    opacity: 0;
    transform: translateY(2em);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes tagBounce {
  0%,
  100% {
    transform: translateY(-1px);
  }
  50% {
    transform: translateY(-5px);
  }
}
