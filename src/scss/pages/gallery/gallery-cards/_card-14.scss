@use '../../../abstracts/mixins' as m;

.card-14 {
  &:is(:hover, .animate, :focus-visible, :focus-within) {
    .bicycle,
    .helicopter,
    .line-1,
    .line-2,
    .fly-1,
    .fly-2 {
      animation-play-state: running;
    }
  }

  .card__top {
    position: relative;
    background-color: var(--primary);
  }

  .frame {
    box-shadow: none;
    width: clamp(240px, 330px, 80%);
    height: 160px;
    overflow: visible;
    background-color: none;
  }

  .card,
  .card * {
    border-radius: 5px;
  }

  .wrapper {
    @include m.filling-element;
    overflow: hidden;
  }

  .track {
    position: absolute;
    left: 50%;
    bottom: 25px;
    transform: translateX(-50%);
  }

  line,
  path {
    stroke: var(--text);
    stroke-width: 3;
    stroke-linecap: round;
  }

  .fly-1 {
    transform: translateX(100%);
    animation: wind 1.5s linear infinite;
    animation-play-state: paused;
  }
  .fly-2 {
    transform: translateX(85%);
    animation: wind-2 1s linear infinite 0.7s;
    animation-play-state: paused;
  }

  .box {
    width: 180px;
    height: 130px;
  }

  @keyframes wind {
    100% {
      transform: translateX(-80%);
    }
  }

  @keyframes wind-2 {
    100% {
      transform: translateX(-100%);
    }
  }

  .line-1 {
    stroke-dasharray: 15 30;
    animation: ride-slow 0.4s linear infinite;
    animation-play-state: paused;
  }

  .line-2 {
    position: absolute;
    bottom: 5px;
    stroke-dasharray: 7 30;
    animation: ride 0.5s linear infinite;
    animation-play-state: paused;
  }

  @keyframes ride {
    0% {
      stroke-dashoffset: -74;
    }
  }
  @keyframes ride-slow {
    0% {
      stroke-dashoffset: -45;
    }
  }

  .bicycle {
    transform-origin: bottom;
    animation: bump 0.6s ease-in-out infinite;
    animation-play-state: paused;
  }

  .helicopter {
    animation: fly 2s ease-in-out infinite;
    animation-play-state: paused;
  }

  @keyframes bump {
    0%,
    100% {
      transform: translate(-50%, -50%);
    }
    50% {
      transform: translate(-50%, -50%) scaleY(0.97);
    }
  }

  @keyframes fly {
    0%,
    100% {
      transform: translate(-50%, -50%) scaleY(-1);
    }
    50% {
      transform: translate(-50%, -70%) scaleY(-1);
    }
  }

  /* 3d */

  .frame {
    perspective: 600px;
  }

  .card {
    position: relative;
    @include m.filling-element;
    box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.6);
    background-color: var(--secondary);
    transform-style: preserve-3d;
    transition: all 1s ease-in-out;
  }

  .box,
  .wrapper,
  .card__face img {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
  .frame:is(:hover, :focus-visible) .card {
    transform: rotateX(180deg);
    box-shadow: 5px -5px 20px rgba(0, 0, 0, 0.6);
  }

  .card__face {
    position: absolute;
    @include m.filling-element;
    background-color: var(--secondary);
    backface-visibility: hidden;
  }

  .card__face--back {
    transform: rotateX(180deg);
  }
}
