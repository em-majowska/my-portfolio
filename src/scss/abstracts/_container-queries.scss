@use 'mixins' as m;

header,
main,
section,
.animated-elements,
footer {
  container-type: inline-size;
}
header {
  container-name: header;
}
main {
  container-name: main;
}
footer {
  container-name: footer;
}

// ======================
/*  Navigation */
// ======================
@container header (min-width: 770px) {
  // @media screen and (min-width: 770px) {
  .menu-btn {
    display: none;
  }

  body {
    .nav {
      @include m.flex-container(null, flex-start, null);
      align-items: flex-end;
      // max-height: 79px;

      .navbar {
        padding: 1rem 3rem 0.5rem 1rem;
      }
    }

    a.menu__link:is(:focus-visible, :hover) {
      background-color: transparent;
    }
  }

  .nav div.menu {
    position: initial;
    width: 100%;
    height: auto;
    padding: 0 1rem var(--padding-outline) var(--padding-outline);
    // margin-inline-end: 1rem;
    border-radius: 0;
    box-shadow: none;
    animation: none;
    transform: none;
    overflow: visible;

    .menu-list {
      @include m.flex-container(null, flex-start, flex-end);
      flex-wrap: wrap;
      flex: 2;
      gap: 30px;
      width: fit-content;
    }

    & .menu__item {
      display: flex;
    }

    & .menu__link {
      position: relative;
      padding: 0.5rem 0.5rem 0 0.5rem;
      text-wrap: nowrap;

      &::after {
        @include m.pseudo;
        inset: auto 0 0;
        height: 0;
        border-radius: 2px;
        background-color: var(--accent);
        transition: height 0.3s ease-in-out;
      }

      &:is(:focus-visible, :hover)::after {
        height: 4px;
      }
    }
  }

  body .lang-nav {
    $color-palette-nav: var(--saturated), var(--secondary), var(--accent);
    --first-icon-open: translate(0, var(--icon-offset));
    --second-icon-closed: translate(0, calc(-1 * var(--icon-offset)));
    --third-icon-closed: translate(0, calc(-2 * var(--icon-offset)));

    // @include m.flex-container(row-reverse, null, null);
    justify-content: end;
    max-width: 47px;
    height: 47px;
    padding: 0;
    margin: 0 0 0 auto;

    &:is(:focus-visible, :hover, :focus-within) {
      background-color: transparent;

      & .lang-nav__btn {
        background-color: var(--background);
      }
    }

    &:is(:focus-visible, :hover) .lang-nav__btn {
      background-color: var(--text);
      fill: var(--background);
    }

    &__btn {
      border: var(--border);
      transition: border 0.3s ease-in-out, background-color 0.3s ease-in-out,
        fill 0.3s ease-in-out;

      &:is(:focus-visible, :hover) {
        outline-color: var(--text);
      }
    }

    ul {
      @include m.set-color-palette(li, $color-palette-nav);
      flex-direction: column;
    }

    &__item {
      border: 2px solid transparent;
      text-align: center;

      &[aria-selected='true'] {
        color: var(--text);
        border: var(--border);
      }
    }

    &[aria-expanded='true'] {
      .lang-nav__btn {
        border-color: transparent;
        background-color: var(--text);
        fill: var(--background);
      }

      .lang-nav__container {
        width: var(--icon-size);
      }
    }
  }

  // ======================
  /*  Hero */
  // ======================

  body {
    .hero {
      &.wrapper:where(:has(.hero__text)) {
        flex-direction: row;
      }
    }

    .hero {
      &__text {
        display: grid;
        align-self: stretch;
        max-width: 540px;

        h1 {
          max-width: unset;
          text-wrap: nowrap;
          line-height: 1.2;
          font-size: clamp(2.5rem, 8vw, 96px);
          align-self: end;
        }
      }

      &__img {
        transform: translate(0, 0);
        max-width: unset;

        .outline {
          height: 109%;
          width: 110%;
          transform: translate(-4.5%, -7.5%);
          overflow: hidden;

          path {
            stroke-width: 1;
            transform-origin: 45% 100%;
          }
        }
      }

      .lines {
        display: none;
      }
    }

    .hero {
      &:where(:has(.btn)) {
        padding-block-end: 7vmax;
      }

      .btn {
        display: grid;
        justify-self: end;
        align-self: end;
      }
    }
  }
}

@container header (min-width: 1000px) {
  body {
    .nav {
      min-width: fit-content;
      max-height: 94px;
      padding-inline: 1rem;
      align-items: flex-end;

      .logo {
        padding-inline-start: 0;
      }

      .logo,
      .logo > img {
        width: 70px;
      }

      .navbar {
        padding-inline-start: 0;
      }

      .menu {
        padding: 0 0 var(--padding-outline) var(--padding-outline);
      }
    }

    .lang-nav {
      &[aria-expanded='true'] {
        max-width: var(--max-width);
      }

      ul {
        --first-icon-open: translateX(calc(-1 * var(--icon-offset)));
        --second-icon-closed: translateX(calc(1 * var(--icon-offset)));
        --third-icon-closed: translateX(calc(2 * var(--icon-offset)));

        flex-direction: row-reverse;
      }
    }

    .hero .btn {
      margin-block-start: 3rem;
      align-self: center;
    }
  }
}

// ======================
/* Main */
// ======================

@container main (min-width: 770px) {
  body {
    .about-me__container {
      min-height: 350px;
    }
    /* skills Section */
    .section.skills .wrapper p {
      margin-inline: unset;
    }

    .skills {
      .circle {
        transform: translate(40vw, 20%);
      }

      &__container {
        grid-template-columns: 50% 50%;
        align-items: center;

        .window {
          margin-block-start: 0;

          code {
            font-size: clamp(1rem, 2vw, 1.5rem);
          }
        }
      }
    }

    .animated-elements {
      --cat-size: 300px;

      .cat {
        transform: translate(0, 125px);
      }
    }
  }
}

@container main (min-width: 850px) {
  body {
    .portfolio .portfolio-gallery__card {
      .data {
        scale: 1;
      }

      &:first-child {
        transform: rotate(-20deg) translateY(60px);
        &:is(:hover, :focus-visible) {
          transform: rotate(-20deg) translate(-2em, -2em);
        }
      }

      &:nth-child(2) {
        transform: rotate(-10deg) translateY(15px);
        &:is(:hover, :focus-visible) {
          transform: rotate(-10deg) translate(-2em, -2em);
        }
      }
      &:nth-child(3) {
        &:is(:hover, :focus-visible) {
          transform: rotate(0deg) translate(-2em, -2em);
        }
      }

      &:nth-child(4) {
        transform: rotate(10deg) translateY(15px);
        &:is(:hover, :focus-visible) {
          transform: rotate(10deg) translate(-2em, -2em);
        }
      }

      &:nth-child(5) {
        transform: rotate(20deg) translateY(60px);
        &:is(:hover, :focus-visible) {
          transform: rotate(20deg) translate(2em, -2em);
        }
      }
    }
  }
}

@container main (min-width: 1000px) {
  body {
    /* About Me Section */

    .about-me {
      h3 {
        height: initial;
        width: initial;
        overflow: initial;

        position: relative;
        display: flex;
        padding-inline-end: 100px;
        justify-content: space-between;
        font-size: 3rem;
        font-weight: 500;

        & > *:not(:last-child) {
          transform: translateY(30px);
          opacity: 0;
        }

        span[lang='pl'] {
          rotate: -10deg;
          color: hsl(from var(--text) h s l / 0.6);
        }

        span[lang='fr-FR'] {
          rotate: 10deg;
        }

        span[lang='ja-Hira'] {
          position: absolute;
          height: 0;
          inset: 11rem -0.5rem auto auto;
          font-family: 'MS Gothic', Arial, sans-serif;
          font-size: 2.25rem;
          letter-spacing: 10px;
          word-break: keep-all;
          writing-mode: vertical-rl;
          overflow: hidden;
        }
      }

      &.animate {
        h3 {
          span:not(:last-child) {
            animation: pop-up 0.4s ease-out forwards;
          }

          @include m.random-delay(span, 0.75s, 1, 3);
        }

        span[lang='ja-Hira'] {
          animation: unroll 2s ease-out 2s forwards;
        }

        text {
          animation: pop-up 0.4s ease-out 1s forwards;
        }

        .about-me__frame {
          animation: path-length 4s ease-in-out forwards;
        }

        @keyframes path-length {
          to {
            stroke-dasharray: 1;
          }
        }
        @keyframes pop-up {
          to {
            transform: translate(0px, 0px);
            opacity: 1;
          }
        }
        @keyframes unroll {
          to {
            height: 800px;
          }
        }
      }
    }

    // About Me Layout

    .about-me {
      div.about-me__container {
        display: grid;
        align-items: center;
        grid-template-columns: 1fr 57.5%;
        width: 90%;
        max-width: 1080px;
        margin-block-start: 0;
      }

      &__frame {
        grid-row: 1/2;
        grid-column: 1/3;

        display: block;
        @include m.filling-element;
        stroke-width: 1;
        stroke-dasharray: 0 1;
        overflow: visible;
      }

      .about-me__text {
        padding: 2rem;
      }

      &__text {
        grid-row: 1/2;
        grid-column: 2/3;

        max-width: 100%;
        margin-inline: auto;

        p {
          min-width: 100%;
        }
      }

      .btn {
        display: none;
      }
    }

    .about-me .widget {
      grid-row: 1/2;
      grid-column: 1/2;
      margin: 100px auto 0 -20px;

      &__avatar {
        width: 100%;
      }

      &__text {
        display: none;
      }
    }

    /* Portfolio Section */

    .portfolio {
      &::after {
        background: none;
        mask-image: none;
      }
      .wrapper {
        position: relative;
      }
      .wrapper > * + * {
        margin-block-start: 70px;
      }

      .portfolio-gallery {
        padding-block-end: clamp(52px, 5.5vmax, 70px);
      }

      .wrapper::after {
        @include m.pseudo;
        inset: 0;
        height: 100%;
        width: clamp(995px, 90%, 1000px);
        margin-inline: auto;
        background: url('../../assets/svg/dots-path-background.svg') no-repeat
          50% 15px;
        z-index: -2;
      }
    }

    /* Contact Section */

    .contact {
      .wrapper {
        padding-block-end: 0px;
      }

      & > .wrapper:first-child {
        @include m.flex-container(null, null, flex-start);
        height: 85vh;

        .window {
          margin: 0;
          align-self: center;
        }
      }
    }
    .animated-elements {
      --cat-size: 400px;
      height: auto;

      .sun {
        transform: translate(55vw, 5%);
      }

      .cat {
        transform: translate(0, 160px);
      }
    }
  }
  body section:not(.about-me) > .wrapper {
    min-height: 820px;
  }
}

@container main (min-width: 1300px) {
  body {
    .skills {
      .spark-1 {
        transform: translate(34vw, -80%);
      }
    }
  }
}

@container main (min-width: 1700px) {
  body {
    .contact .sun {
      transform: translate(calc(55vw - 50%), 5%);
    }
  }
}

// ======================
/* CSS Challenge Gallery */
// ======================

@container header (min-width: 1000px) {
  body .hero__gallery {
    margin: 150px auto 80px auto;
  }
}

@container main (min-width: 1000px) {
  body .gallery {
    margin-block-end: 300px;
  }
}
